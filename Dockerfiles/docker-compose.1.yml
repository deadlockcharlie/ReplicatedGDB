services:
  memgraph1:
    image: memgraph/memgraph:latest
    container_name: memgraph1
    command: ["--log-level=TRACE"]
    pull_policy: always
    healthcheck:
      test: ["CMD-SHELL", "echo 'RETURN 0;' | mgconsole || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 0s
    ports:
      - "7687:7687"
    networks:
      - Grace_net_1
  lab1:
    image: memgraph/lab
    pull_policy: always
    depends_on:
      memgraph1:
        condition: service_healthy
    ports:
      - "7474:3000"
    environment:
      QUICK_CONNECT_MG_HOST: memgraph1
      QUICK_CONNECT_MG_PORT: 7687
    networks:
      - Grace_net_1



  app1:
    build:
      context: ../
      dockerfile: ./Dockerfiles/GRACEDockerfile
    container_name: Grace1
    ports:
      - "3000:3000"
    environment:
      WS_URI: "ws://wsserver:1234"
      NEO4J_URI: "bolt://memgraph1:7687"
      NEO4J_USER: "neo4j"
      NEO4J_PASSWORD: "verysecretpassword"
    depends_on:
      memgraph1:
        condition: service_healthy
    networks:
      - Grace_net_1

  prometheus:
    image: prom/prometheus
    container_name: Prometheus1
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - Grace_net_1

  grafana:
    image: grafana/grafana
    container_name: Grafana1
    ports:
      - "5000:3000"
    depends_on:
      - prometheus
    networks:
      - Grace_net_1

networks:
  Grace_net_1: